AWSTemplateFormatVersion: '2010-09-09'
Description: 'Rekognition Video Stream'
Parameters:
  ApplicationName:
    Description: Hotel API security camera stream name
    Type: String
    Default: RekognitionVideoStream
  EmailAddress:
    Description: Admin email address used for SNS notification whenever people are found in video
    Type: String

Resources:

  EventMetadataStream:
    Type: "AWS::Kinesis::Stream"
    Properties: 
      Name: !Sub ${ApplicationName}-Stream
      ShardCount: 1

  SNSTopic:
    Type: "AWS::SNS::Topic"
    Properties: 
      DisplayName: !Sub ${ApplicationName} SNS Topic
      Subscription:
        -
          Endpoint: !Sub ${EmailAddress}
          Protocol: email
        # - Endpoint: !GetAtt RekognitionVideoLambda.Arn # Subscribe hotelLambda to sns topic
        #   Protocol: lambda

  SNSPublishRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: '/'
      Policies:
        -
          PolicyName: lambda-comprehend-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action:
                    - 'sns:Publish'
                    - 'sns:Subscribe'
                Resource: '*'
              -
                Effect: Allow
                Action:
                    - 'kinesis:GetRecords'
                    - 'kinesis:GetShardIterator'
                    - 'kinesis:DescribeStream'
                    - 'kinesis:ListStreams'
                Resource: !GetAtt EventMetadataStream.Arn
              -
                Effect: Allow
                Action:
                    - 'kinesis:ListStreams'
                Resource: '*'
              - 
                Effect: Allow
                Action:
                    - 'logs:CreateLogGroup'
                    - 'logs:CreateLogStream'
                    - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*' 

  RekognitionVideoIAM:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service: rekognition.amazonaws.com
            Action: sts:AssumeRole
      Path: '/'
      Policies:
        -
          PolicyName: lambda-comprehend-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action:
                    - 'kinesis:*'
                Resource: !GetAtt EventMetadataStream.Arn
              -
                Effect: Allow
                Action:
                    - 'kinesisvideo:*'
                Resource: '*'
              -
                Effect: Allow
                Action:
                    - 'rekognition:*'
                Resource: '*'

  RekognitionVideoLambda: 
    Type: "AWS::Lambda::Function"
    Properties: 
      Environment:
        Variables:
          sns: !Ref SNSTopic
      Handler: "index.handler"
      Role: !GetAtt SNSPublishRole.Arn
      Code: 
        S3Bucket: "terraform-serverless-hotel-lambda"
        S3Key: "KinesisVideoRekognition/Lambda.zip"
      Runtime: "nodejs6.10"
      Timeout: "120"

# Invoke permission for SNS topic to invoke lambda
  # RekognitionVideoLambdaPermission:
  #   Type: "AWS::Lambda::Permission"
  #   Properties:
  #     FunctionName: !GetAtt RekognitionVideoLambda.Arn
  #     Action: "lambda:InvokeFunction"
  #     Principal: sns.amazonaws.com
  #     SourceArn: !Ref SNSTopic.Arn

  RekognitionLambdaKinesisMapping:
    Type: "AWS::Lambda::EventSourceMapping"
    Properties: 
      BatchSize: 10
      Enabled: true
      EventSourceArn: !GetAtt EventMetadataStream.Arn
      FunctionName: !GetAtt  RekognitionVideoLambda.Arn
      StartingPosition: "LATEST"

Outputs:
  KinesisDataStreamArn:
    Description: Kinesis Data Stream Arn (used in Stream Processer Input)
    Value: !GetAtt EventMetadataStream.Arn

  RekognitionVideoIAM:
    Description: Rekognition Video Processing IAM Arn (used in Stream Processer Input)
    Value: !GetAtt RekognitionVideoIAM.Arn
  
  SNSPublishRoleArn:
    Description: SNS Pub Role Arn (used for lambda function with API gateway to subscribe users)
    Value: !GetAtt SNSPublishRole.Arn
  
  SNSTopicArn:
    Description: SNS Topic Arn for use in SNS user subscriptions
    Value: !Ref SNSTopic
